server.port=8080
spring.application.name=ems-service
#eureka.client.serviceUrl.defaultZone=http://localhost:8761/eureka/
spring.main.allow-bean-definition-overriding=true
ems-service.ribbon.NFLoadBalancerRuleClassName= com.globant.EMS.proxies.PickFirstLoadBalancerRule
    
spring.datasource.url = jdbc:mysql://localhost:3306/emsdb?useSSL=false

# Username and password
spring.datasource.username = root
spring.datasource.password = root
#security.enablecsrf= false
security.enable-csrf=false

# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle = true
spring.datasource.validationQuery = SELECT 1

# ===============================
# = JPA / HIBERNATE
# ===============================

# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager).

# Show or not log for each sql query
spring.jpa.show-sql = true

# Hibernate ddl auto (create, create-drop, update): with "update" the database
# schema will be automatically updated accordingly to java entities found in
# the project
spring.jpa.hibernate.ddl-auto = update

# Naming strategy
spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy

# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect

# Spring OAuth
##Secret which was used to encrypt the password by Jasypt
jasypt.encryptor.password=secretEmsKey
#jasypt.encryptor.bean=encryptor //To provide custom encryptor
security.oauth2.client.clientId=ENC(gqoW0pYcYPTUPITS9jUVr36yQSaeV+N+AOvVi1+LIAdREjilmZPTXcuxyTUNEIsWXadbWjRX+kCePQyaUJ4TxJslLV0fe1dxfl5CJ84s6PxD4BxJHLhJWQ==)
security.oauth2.client.clientSecret=ENC(U3zLVGulMbV5ns2Uj03r0n3TNrRmPB1wYdsPnYCydSslV/qGeh6kXA==)
security.oauth2.client.accessTokenUri  =  https://www.googleapis.com/oauth2/v4/token
security.oauth2.client.userAuthorizationUri  =  https://accounts.google.com/o/oauth2/v2/auth
#security.oauth2.client.tokenName = oauth_token
#security.oauth2.client.authenticationScheme = query
security.oauth2.client.clientAuthenticationScheme = form
security.oauth2.client.scope = email profile
security.oauth2.resource.userInfoUri  =  https://www.googleapis.com/oauth2/v3/userinfo
security.oauth2.resource.preferTokenInfo = true